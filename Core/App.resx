<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k1h0NMcAAAAASUVORK5CYII=
</value>
  </data>
</root>